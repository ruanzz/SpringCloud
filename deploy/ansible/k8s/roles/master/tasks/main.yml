---
- name: Create work dir
  file: dest={{ k8s_work_dir }}/{{ item }} state=directory
  with_items:
  - bin
  - cfg
  - ssl
  - logs

- name: Create etcd ssl dir
  file: dest={{ k8s_work_dir }}/ssl/etcd state=directory

- name: Create tmp dir
  file: dest={{ tmp_dir }} state=directory

- name: Copy kubernetes-*.tar.gz
  unarchive: src={{ item }} dest={{ tmp_dir }}
  with_fileglob:
  - "{{ software_dir }}/kubernetes-*.tar.gz"

- name: Move kubernetes Install file
  shell: cp -rf {{ tmp_dir }}/kubernetes/server/bin/{kube-apiserver,kube-controller-manager,kube-scheduler} {{ k8s_work_dir }}/bin && \
    cp -rf {{ tmp_dir }}/kubernetes/server/bin/kubectl /usr/bin

- name: Copy K8s cert file
  copy: src=k8s_cert/{{ item }} dest={{ k8s_work_dir }}/ssl
  with_items:
  - ca.pem
  - ca-key.pem
  - server.pem
  - server-key.pem

- name: Copy etcd cert file
  copy: src=etcd_cert/{{ item }} dest={{ k8s_work_dir }}/ssl/etcd
  with_items:
  - ca.pem
  - server.pem
  - server-key.pem

- name: Copy token.csv
  copy: src=token.csv dest={{ k8s_work_dir }}/cfg

- name: Copy kubernetes config file
  template: src={{ item }} dest={{ k8s_work_dir }}/cfg/{{ item.split('.')[:-1]|join('.') }}
  with_items:
  - kube-apiserver.conf.j2
  - kube-controller-manager.conf.j2
  - kube-scheduler.conf.j2

- name: Config kubernetes master component systemd
  template: src={{ item }} dest=/usr/lib/systemd/system/{{ item.split('.')[:-1]|join('.') }}
  with_items:
  - kube-apiserver.service.j2
  - kube-controller-manager.service.j2
  - kube-scheduler.service.j2

- name: Start kubernetes master component
  systemd: name={{ item }} state=restarted enabled=yes daemon_reload=yes
  with_items:
  - kube-apiserver
  - kube-controller-manager
  - kube-scheduler

- name: Printf kubernetes cluster status
  shell: sleep 3 && kubectl get cs
  register: cs
- debug: var=cs.stdout_lines

- name: Copy RBAC yaml
  copy: src={{ item }} dest={{ tmp_dir }}
  with_items:
  - kubelet-bootstrap-rbac.yaml
  - apiserver-to-kubelet-rbac.yaml

- name: Authorization kube-apiserver visit Kubelet and Authorization kubelet bootstrap
  ignore_errors: yes
  shell: kubectl apply -f {{ tmp_dir }}/apiserver-to-kubelet-rbac.yaml && \
    kubectl apply -f {{ tmp_dir }}/kubelet-bootstrap-rbac.yaml

