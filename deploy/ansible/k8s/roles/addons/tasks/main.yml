---
- name: Allow node join cluster
  ignore_errors: yes
  shell: kubectl certificate approve $(kubectl get csr |awk 'NR!=1{print $1}')

- name: Copy *.yaml to master
  copy: src={{ item }} dest={{ tmp_dir }}
  with_fileglob:
  - "*.yaml"

- name: Deploy Flannel | Dashboard | CoreDNS | Ingress
  ignore_errors: yes
  shell: |
    cd {{ tmp_dir }}
    for yaml in $(ls *.yaml);do kubectl apply -f $yaml;done

- name: Replace Dashboard cert file
  shell: |
    kubectl delete secret kubernetes-dashboard-certs -n kubernetes-dashboard |true
    kubectl create secret generic kubernetes-dashboard-certs \
    --from-file={{ k8s_work_dir }}/ssl/server-key.pem --from-file={{ k8s_work_dir }}/ssl/server.pem -n kubernetes-dashboard
    kubectl apply -f {{ tmp_dir }}/kubernetes-dashboard.yaml

- name: Printf kubernetes cluster all info
  shell: kubectl get all --all-namespaces
  register: getall
- debug: var=getall.stdout_lines

- name: Create dashboard admin token
  ignore_errors: yes
  shell: |
    kubectl create serviceaccount dashboard-admin -n kubernetes-dashboard
    kubectl create clusterrolebinding dashboard-admin --clusterrole=cluster-admin --serviceaccount=kubernetes-dashboard:dashboard-admin

- name: Acquire dashboard admin token
  ignore_errors: yes
  shell: |
    web='https://{NodeIP}:30001'
    token=$(kubectl describe secrets -n kubernetes-dashboard \
    $(kubectl get secret -n kubernetes-dashboard | awk '/dashboard-admin/{print $1}') |awk '/^token/{print $2}')
    echo "endpoint:【$web】"
    echo "token:【$token】"
  register: ui
- name: Printf kubernetes dashboard login info
  debug: var=ui.stdout_lines

